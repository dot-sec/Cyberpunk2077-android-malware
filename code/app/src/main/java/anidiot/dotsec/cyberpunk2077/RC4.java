package anidiot.dotsec.cyberpunk2077;

public class RC4 {
    private static final int SBOX_LENGTH = 256;

    private int f70i = 0;
    private int f71j = 0;
    private int[] sbox;

    public RC4(byte[] bArr) {
        this.sbox = initSBox(bArr);
    }

    public byte[] decrypt(byte[] bArr) {
        return encrypt(bArr);
    }

    public byte[] encrypt(byte[] bArr) {
        byte[] bArr2 = new byte[bArr.length];
        for (int i = 0; i < bArr.length; i++) {
            int i2 = (this.f70i + 1) % 256;
            this.f70i = i2;
            int i3 = this.f71j;
            int[] iArr = this.sbox;
            int i4 = (i3 + iArr[i2]) % 256;
            this.f71j = i4;
            swap(i2, i4, iArr);
            int[] iArr2 = this.sbox;
            bArr2[i] = (byte) (iArr2[(iArr2[this.f70i] + iArr2[this.f71j]) % 256] ^ bArr[i]);
        }
        return bArr2;
    }

    private int[] initSBox(byte[] bArr) {
        int[] iArr = new int[256];
        for (int i = 0; i < 256; i++) {
            iArr[i] = i;
        }
        int i2 = 0;
        for (int i3 = 0; i3 < 256; i3++) {
            i2 = (((i2 + iArr[i3]) + bArr[i3 % bArr.length]) + 256) % 256;
            swap(i3, i2, iArr);
        }
        return iArr;
    }

    private void swap(int i, int i2, int[] iArr) {
        int i3 = iArr[i];
        iArr[i] = iArr[i2];
        iArr[i2] = i3;
    }
}
